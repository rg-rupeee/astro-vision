openapi: 3.0.3
info:
  title: AstroVision API
  version: "1.0.0"
  description: API documentation generated from Postman collection.

servers:
  - url: http://localhost:3000

paths:
  /api/v1/auth/signup:
    post:
      summary: User signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup'
      responses:
        '200':
          description: Signup successful
        '400':
          description: Invalid input

  /api/v1/auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Login successful
        '401':
          description: Unauthorized

  /api/v1/horoscope/today:
    get:
      summary: Get today's horoscope
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Horoscope data
        '401':
          description: Unauthorized

  /api/v1/horoscope/history:
    get:
      summary: Get horoscope history
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: days
          schema:
            type: integer
            example: 7
          required: false
          description: Number of days of history to fetch
      responses:
        '200':
          description: Horoscope history data
        '401':
          description: Unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Signup:
      type: object
      required:
        - name
        - email
        - password
        - birthdate
      properties:
        name:
          type: string
          example: Rupesh Garhwal
        email:
          type: string
          format: email
          example: rupesh.garhwal@test.com
        password:
          type: string
          example: pass@123
        birthdate:
          type: string
          example: 2000/03/09

    Login:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: rupesh.garhwal@test.com
        password:
          type: string
          example: pass@123
